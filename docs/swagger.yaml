definitions:
  controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  controllers.GetAccessTokenRequest:
    properties:
      guid:
        type: string
    type: object
  controllers.GetAccessTokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  controllers.LogoutResponse:
    properties:
      message:
        type: string
    type: object
  controllers.MeResponse:
    properties:
      guid:
        type: string
    type: object
  controllers.RefreshRequest:
    properties:
      refresh_token:
        type: string
    type: object
  controllers.RefreshResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LogoutResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Logout
      tags:
      - auth
  /auth/me:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.MeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get my GUID
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: Refresh access token request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.RefreshResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Refresh access token
      tags:
      - auth
  /auth/token:
    post:
      consumes:
      - application/json
      parameters:
      - description: Get access token request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.GetAccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.GetAccessTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get access token
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    description: '"Type ''Bearer {access_token}''"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
